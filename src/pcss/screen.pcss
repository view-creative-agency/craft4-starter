/* imports have to be at the top */
@import "reset.pcss";
@import "base-rules.pcss";

/* Individual UI components */
@import "components/cms-textblock.pcss";
@import "components/mixed-content.pcss";
@import "components/ajax-popups.pcss";

/* Handy tricks with modern CSS
	.container:not(:has(*)) {
		selects any container with no child elements
	}

	.container:has(> :last-child:nth-child(N)) {
		selects any container with exactly N child elements
	}
*/

/* visualise layout helper classes
	.dev-mode *[class*='l_'] {
		outline: 1px solid red;
		&::after {
			position: absolute;
			content: attr(class);
			font-size: 0.6rem;
			background-color: gray; color: white;
			padding: 0.5em;
		}
	}
*/

.devWarning {
	position: absolute; top: 0; left: 0; right: 0;
	padding: 0.5em 1em;
	text-align: center; background: rebeccapurple; color: white;
	animation: fadeOut 0.3s 2s both; pointer-events: none;
}

/* stop transitions playing on page load */
	html:not( .load-complete ) *:not( [data-on-load=""] ) {
		transition: none !important;
	}

/* accessibility */
	.skiplink {
		&:focus {
			position: fixed; left: 0;
			width: 100vw; height: auto; padding: 1ch;
			background-color: yellow; color: navy; text-align: center;
			outline: 0;
		}
	}

/* responsive embed container
   https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio
   https://web.dev/aspect-ratio/ */

	.embedContainer {
		position: relative;
		width: 100%;
		overflow: hidden;

		@supports not (aspect-ratio: 1 / 1) {
			/* 4:3 ratio (olden standard ratio) */
			height: 0; padding-bottom: 75%; max-width: 100%;
		}

		& iframe,
		& object,
		& embed,
		& > div {
			position: absolute; top: 0; left: 0;
			width: 100% !important; height: 100% !important;

			& * {
				box-sizing: content-box;
			}

			& img {
				width: auto; max-width: none;
			}
		}

		&.widescreen { /* 16:9 ratio (common TV/Video ratio) */
			@supports (aspect-ratio: 1 / 1) {
				aspect-ratio: 16 / 9;
			}
			@supports not (aspect-ratio: 1 / 1) {
				padding-bottom: 56.25%;
			}
		}

		&.cinema185 { /* 1.85:1 */
			@supports (aspect-ratio: 1 / 1) {
				aspect-ratio: 1.85 / 1;
			}
			@supports not (aspect-ratio: 1 / 1) {
				padding-bottom: 54.05405405%;
			}
		}

		&.cinema239 { /* 2.39:1 */
			@supports (aspect-ratio: 1 / 1) {
				aspect-ratio: 2.39 / 1;
			}
			@supports not (aspect-ratio: 1 / 1) {
				padding-bottom: 43%;
			}
		}
	}

/* social media icons */
	.sm {
		& ul {
			display: flex; align-items: center; flex-wrap: wrap; gap: calc( 0.5 * var(--gap) );
			list-style: none;
			margin-bottom: 0;
		}

		& li {
			& a {
				display: block;
				transition: all .3s; transform-origin: 50% 50%;
			}
			& span {
				/* @include hide-element; */
			}
		}

		& svg {
			display: block;
		}

		&.brand-compliant {
			& a {
				width: 42px;

				&:hover,
				&:focus {
					transform: scale(1.1);
				}
			}

			& svg {
				width: 42px; height: 42px;
			}
		}

		&.outline	{
			& a {
				width: 36px;

				&:hover,
				&:focus {
					transform: scale(1.1);
				}
			}

			& svg {
				width: 36px; height: 36px;

				& path,
				& circle {
					fill: currentColor;
				}
			}
		}
	}

/* seomatic opening hours */
	.seomatic-opening-hours {
		& li {
			display: flex;

			& .day {
				width: 3em;
			}

			& .closes {
				&:before {
					content: " - ";
				}
			}
		}
	}

/* pagination-controls */
	.pagination-controls {
		border-top: 1px solid rgba(0,0,0,0.1); padding-top: 1em; margin-top: 1em;

		& h3 {
			/* @include hide-element; */
		}

		& ul {
			display: flex; justify-content: space-between;
			list-style: none;

			& li.prev {
				align-self: flex-start;
			}
			& li.next {
				align-self: flex-end;
				text-align: right;
			}
		}
	}

/* pendingTranslation */
	.pendingTranslation {
		color: red;
	}

/* Actual design! */
	a.ui-effect,
	.cms-textblock a {
		position: relative;
		display: inline-block;

		&::before {
			position: absolute; inset: -0.1em -0.2em; z-index: -1;
			content: ""; display: block;
			background-color: currentColor; opacity: 0.1; border-radius: 0.25em;
			transform-origin: bottom right; transform: scaleX(0);
			transition: transform var(--fast) ease;
		}

		&:hover {
			&::before {
				transform-origin: bottom left;
				transform: scaleX(1);
			}
		}
	}

	footer {
		background-color: hsl( var(--brand-colour) ); color: hsl( var(--white) );

		& :where(.row1, .row2) {
			width: 100%;
		}

		& .phoneAndMail {
			font-family: monospace;

			& li::before {
				content: "";
				vertical-align: center;
				display: inline-block;
				width: calc(1ch);
				height: 1ch;
				margin-inline-end: 0.25ch;
				background: transparent url('/dist/svg/phone.svg') 0 0 / contain no-repeat;
			}
		}

		& li.email::before {
			background: transparent url('/dist/svg/mail.svg') 0 0 / contain no-repeat;
		}
	}

/* An example of using CSS Container Queries */
	.cardExample {
		container-type: inline-size; /* The .cardExample div itself is "the container" */

		& a { text-decoration: underline; }

		& .wrapper {
			background-color: green;
		}

		@container (min-width: 1000px) {
			& .wrapper {
				background-color: red;
			}
		}
	}

/* Animations */
	@keyframes scale {
		from { transform: scale(1.3); }
		to   { transform: scale(1); }
	}

	@media screen and (prefers-reduced-motion: no-preference) { /* only animate motion if the user is OK with it */
		.uc_pulseEffect { /* Subtle scaling on images */
			overflow: hidden;

			& img {
				animation: scale 30s infinite;
				animation-direction: alternate;
			}
		}
	}

	html.js-supportsIntersectionObserver {
		& [data-scroll-reveal=""] { /* default reveal effect if no named effect is defined */
			/* opacity is safe to animate for everyone (in terms of a11y issues) */
			will-change: opacity, filter;
			opacity: 0.2; filter: grayscale(1);
			transition-property: opacity, filter;
			transition-duration: var(--slow, 0.6s);
			transition-delay: 0.1s;

			&.js-inViewport {
				opacity: 1; filter: grayscale(0);
			}
		}

		@media screen and (prefers-reduced-motion: no-preference) { /* only animate motion if the user is OK with it */
			&.load-complete picture[data-load-reveal=""] {
				overflow: hidden;

				& img {
					animation: var(--slow) 1 forwards scale;
					animation-timing-function: cubic-bezier(0.5, 0.5, 0.355, 1);
				}
			}

			/*
				Swipe based animations
				The overshoot for the poly coords is so that any box-shadow shows etc that break out of the area won't be clipped
			*/
				& [data-scroll-reveal^="swipe"] {
					will-change: clip-path;
					transition-property: clip-path;
					transition-duration: var(--slow, 0.6s);
					transition-delay: 0.1s;

					&.js-inViewport { /* the end state for all "swipe" animations */
						clip-path: polygon(-5% -5%, 105% -5%, 105% 105%, -5% 105%) !important;
					}
				}

				& [data-scroll-reveal="swipeFromLeft"] {
					clip-path: polygon(-5% -5%, -5% -5%, -5% 105%, -5% 105%);
				}
				& [data-scroll-reveal="swipeFromRight"] {
					clip-path: polygon(105% -5%, 105% -5%, 105% 105%, 105% 105%);
				}
				& [data-scroll-reveal="swipeFromTop"] {
					clip-path: polygon(-5% -5%, 105% -5%, 105% -5%, -5% -5%);
				}
				& [data-scroll-reveal="swipeFromBottom"] {
					clip-path: polygon(-5% 105%, 105% 105%, 105% 105%, -5% 105%);
				}
		}
	}